/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, FootballTeam as PrismaFootballTeam } from "@prisma/client";

export class FootballTeamServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FootballTeamCountArgs, "select">
  ): Promise<number> {
    return this.prisma.footballTeam.count(args);
  }

  async footballTeams(
    args: Prisma.FootballTeamFindManyArgs
  ): Promise<PrismaFootballTeam[]> {
    return this.prisma.footballTeam.findMany(args);
  }
  async footballTeam(
    args: Prisma.FootballTeamFindUniqueArgs
  ): Promise<PrismaFootballTeam | null> {
    return this.prisma.footballTeam.findUnique(args);
  }
  async createFootballTeam(
    args: Prisma.FootballTeamCreateArgs
  ): Promise<PrismaFootballTeam> {
    return this.prisma.footballTeam.create(args);
  }
  async updateFootballTeam(
    args: Prisma.FootballTeamUpdateArgs
  ): Promise<PrismaFootballTeam> {
    return this.prisma.footballTeam.update(args);
  }
  async deleteFootballTeam(
    args: Prisma.FootballTeamDeleteArgs
  ): Promise<PrismaFootballTeam> {
    return this.prisma.footballTeam.delete(args);
  }
}
